name: CI Workflow

on:
  push:
    branches:
      - dev  # dev 브랜치에 푸시될 때 실행됩니다.
      - main  # main 브랜치에 푸시될 때 실행됩니다.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Java 설정 (Gradle 빌드에 사용할 JDK 버전 설정)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'

      # 3. Gradle 캐시 설정 (의존성 캐시를 통해 빌드 속도 향상)
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. Gradle 빌드 및 테스트 실행
      - name: Build and test with Gradle
        run: |
          ./gradlew clean build
          ./gradlew test

      # 5. 테스트 결과 출력
      - name: Upload Test Results
        if: failure()  # 실패한 경우에만 결과를 업로드합니다.
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/test-results/test

      # 6. 빌드 결과 출력 (예: JAR 파일 위치)
      - name: Upload Build Artifacts
        if: success()  # 성공한 경우에만 업로드
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/libs
  notify-discord:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # 1. Discord 알림 (빌드 성공/실패)
      - name: Notify Discord
        uses: ./.github/workflows/notify-discord.yml
        with:
          branch-type : ${{ github.ref_name }}
          build-result : ${{ needs.build.result }}
